# service_path
# sql_path
# jar_path

- name: run on local
  hosts: localhost
  connection: local
  tasks:
    # https://github.com/diodonfrost/terraform-openstack-examples
    - name: Run terraform
      terraform:
        project_path: "./tf"
        force_init: yes
        state: present
        # register: trfrm #Unsupported

    - name: Add instance host
      add_host:
        name: mhq-server
        groups: nodes
        ansible_host: "{{ trfrm.outputs.servers.value.mhq_server }}"
        ansible_ssh_private_key_file: ~/.ssh/id_rsa
        ansible_ssh_common_args: "-o StrictHostKeyChecking=no"

- name: Wait for instance creating
  hosts: localhost
  connection: local     
  
  tasks:
    - name: Wait for a ssh port become available
      wait_for:
        host: "{{ trfrm.outputs.servers.value.tg_server }}" #??? 
        port: 22

- name: Start database server
  hosts: mhq-server
  become: yes
  tasks:
    - name: Update apt package cache
      apt:
        update_cache: yes

    - name: Install postgresql server
      apt:
        name: postgresql
        state: present


    - name: Start postgresql service
      service:
        name: postgresql
        state: restarted
        enabled: yes

    - name: Set user password
      postgresql_user:
        name: postgres
        password: 424242

    - name: Copy sql import script
      copy:
        src: "{{ sql_path  }}"
        dest: /home/ubuntu/create.sql


    - name: Create database
      postgresql_db:
        name: tasks

    - name: Create tables
      postgresql_script:
        db: tasks
        state: import
        target: /home/ubuntu/create.sql

- name: Deploy app
  hosts: mhq-server
  tasks:
    - name: Install JDK
      apt:
        update_cache: yes
        name: openjdk-21-jdk-headless
        state: present
      become: yes

    - name: Copy artifacts
      copy:
        src: "{{ jar_path }}"
        dest: /home/ubuntu/bot.jar
      
    - name: Create bot app service
      copy:
        src: "{{ service_path }}"
        dest: /etc/systemd/system/botserver.service
        mode: '0777'
      become: yes
  
    - name: Start bot app service
      systemd:
        daemon_reload: true
        name: botserver
        state: restarted
      become: yes
   
    rescue:
     - name: Clean up resources because of an error
       terraform:
         project_path: "./tf"
         state: absent
       delegate_to: localhost